{"@timestamp":"2020-06-21T21:44:36.382Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:44:40.904Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:44:40.916Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:44:41.610Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 649ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:44:43.801Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:44:43.819Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:44:43.960Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:44:43.961Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 64ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:44:45.563Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:44:48.301Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:44:51.276Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:44:51.343Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:44:56.240Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)\r\n\tat java.util.Optional.orElseGet(Optional.java:267)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 65 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 83 common frames omitted\r\n","@timestamp":"2020-06-21T21:44:56.260Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1921ad94] to prepare test instance [com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests@243c4346]"}
{"@timestamp":"2020-06-21T21:44:58.791Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:44:59.727Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:44:59.728Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:44:59.787Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 59ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:44:59.928Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:44:59.929Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:44:59.969Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:44:59.970Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 40ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:45:00.611Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:45:08.811Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:45:10.467Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:45:10.595Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:45:10.596Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:45:11.299Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:45:11.299Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 12502 ms"}
{"@timestamp":"2020-06-21T21:45:12.602Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-06-21T21:45:12.603Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-06-21T21:45:12.936Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.netflix.config.DynamicPropertyFactory","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1c5cd2ea"}
{"@timestamp":"2020-06-21T21:45:15.561Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ddc8fc] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:45:21.140Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:45:21.144Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.329-0300 I CONTROL  [initandlisten] MongoDB starting : pid=11872 port=55398 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-949bee2c-03e3-42b3-a44b-7fe26a75992d 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:45:21.145Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:45:21.145Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:45:21.148Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:45:21.150Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:45:21.151Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:45:21.151Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:45:21.152Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:45:21.153Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:45:21.154Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.331-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55398 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-949bee2c-03e3-42b3-a44b-7fe26a75992d\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:45:21.155Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:20.334-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:45:21.448Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:21.448-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:45:21.448Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:21.448-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:45:21.449Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:21.448-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:45:21.449Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:21.448-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:45:21.450Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:21.448-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:45:28.459Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.458-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:45:28.460Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.458-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-949bee2c-03e3-42b3-a44b-7fe26a75992d/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:45:28.882Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.882-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:45:28.883Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.882-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:45:28.893Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.893-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:45:28.897Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.897-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:45:28.900Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:28.900-0300 I NETWORK  [thread1] waiting for connections on port 55398"}
{"@timestamp":"2020-06-21T21:45:28.901Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@7135e8cd"}
{"@timestamp":"2020-06-21T21:45:31.917Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55398], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:45:31.918Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55398 to client view of cluster"}
{"@timestamp":"2020-06-21T21:45:32.118Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:32.118-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55406 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:45:32.169Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:32.170-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55406 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:45:32.196Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd4fbad12ac3244ec44f2', description='null'}-localhost:55398","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:55398"}
{"@timestamp":"2020-06-21T21:45:32.200Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd4fbad12ac3244ec44f2', description='null'}-localhost:55398","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55398, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1508100}"}
{"@timestamp":"2020-06-21T21:45:32.203Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd4fbad12ac3244ec44f2', description='null'}-localhost:55398","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:45:41.780Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:45:42.008Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.008-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55412 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:45:42.078Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.078-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:45:42.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.097-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:45:42.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.097-0300 I NETWORK  [conn2] closing listening socket: 528"}
{"@timestamp":"2020-06-21T21:45:42.098Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.098-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:45:42.110Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.110-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:45:42.257Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.258-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:45:42.404Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:42.404-0300 I -        [conn1] end connection 127.0.0.1:55406 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:45:44.242Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.process.runtime.ProcessControl","message":"stopOrDestroyProcess: process has not exited "}
{"@timestamp":"2020-06-21T21:45:44.459Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:44.459-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:45:44.526Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:44.526-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:45:44.527Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:44.526-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:45:44.527Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:44.526-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:45:46.094Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:45:46.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:45:46.179Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:45:46.486Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:45:46.487Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@c5c2a84]"}
{"@timestamp":"2020-06-21T21:45:48.405Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:45:49.417Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:45:49.418Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:45:49.455Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 36ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:45:49.526Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:45:49.526Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:45:49.542Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:45:49.543Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:45:49.646Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:45:49.870Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:45:50.199Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:45:50.200Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:45:50.201Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:45:50.238Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:45:50.238Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1824 ms"}
{"@timestamp":"2020-06-21T21:45:51.892Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@236bb278] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:45:53.048Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:45:53.363Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.362-0300 I CONTROL  [initandlisten] MongoDB starting : pid=13580 port=55429 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-a7c4d2d6-efb8-4d3d-898b-43eefba6fd64 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:45:53.364Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:45:53.365Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.363-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55429 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-a7c4d2d6-efb8-4d3d-898b-43eefba6fd64\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:45:53.366Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:53.366-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:45:54.415Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:54.416-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:45:54.416Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:54.416-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:45:54.416Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:54.416-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:45:54.416Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:54.416-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:45:54.416Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:54.416-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:45:58.548Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:58.548-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:45:58.549Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:58.548-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-a7c4d2d6-efb8-4d3d-898b-43eefba6fd64/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:45:59.138Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.138-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:45:59.139Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.138-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:45:59.149Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.149-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:45:59.152Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.152-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:45:59.153Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.153-0300 I NETWORK  [thread1] waiting for connections on port 55429"}
{"@timestamp":"2020-06-21T21:45:59.154Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@6792aa3e"}
{"@timestamp":"2020-06-21T21:45:59.165Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55429], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:45:59.166Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55429 to client view of cluster"}
{"@timestamp":"2020-06-21T21:45:59.170Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.170-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55436 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:45:59.171Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:45:59.171-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55436 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:45:59.174Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd517ad12ac3244ec44f3', description='null'}-localhost:55429","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:55429"}
{"@timestamp":"2020-06-21T21:45:59.176Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd517ad12ac3244ec44f3', description='null'}-localhost:55429","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55429, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1433800}"}
{"@timestamp":"2020-06-21T21:45:59.177Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd517ad12ac3244ec44f3', description='null'}-localhost:55429","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:46:00.026Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:00.039Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.039-0300 I -        [conn1] end connection 127.0.0.1:55436 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:00.040Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.040-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55438 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:00.042Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.041-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:46:00.042Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.042-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:46:00.042Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.042-0300 I NETWORK  [conn2] closing listening socket: 520"}
{"@timestamp":"2020-06-21T21:46:00.042Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.042-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:46:00.042Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.042-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:46:00.044Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.044-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:46:00.806Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.806-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:46:00.806Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.806-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:46:00.807Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-16","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:00.806-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:46:01.999Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:46:02.000Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:46:02.009Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:02.322Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:02.322Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@1b2213b2]"}
{"@timestamp":"2020-06-21T21:46:04.052Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:04.181Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:46:04.549Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:04.550Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:04.643Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 91ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:04.762Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:04.762Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:04.781Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:46:04.782Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:46:04.904Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:46:05.071Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:46:05.240Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:46:05.241Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:46:05.242Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:46:05.257Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:46:05.258Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1203 ms"}
{"@timestamp":"2020-06-21T21:46:06.528Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@515a897c] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:46:07.784Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:46:07.885Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.885-0300 I CONTROL  [initandlisten] MongoDB starting : pid=10628 port=55452 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-561a6de6-296a-480b-a278-1c23ae268862 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:46:07.886Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.886-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55452 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-561a6de6-296a-480b-a278-1c23ae268862\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:46:07.887Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:07.887-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:46:08.551Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:08.550-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:46:08.551Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:08.551-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:08.552Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:08.551-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:46:08.552Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:08.551-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:46:08.553Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:08.551-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:10.236Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:10.236-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:46:10.236Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:10.236-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-561a6de6-296a-480b-a278-1c23ae268862/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:46:12.147Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.147-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:46:12.147Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.147-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:46:12.205Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.205-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:46:12.206Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.206-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:46:12.207Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.207-0300 I NETWORK  [thread1] waiting for connections on port 55452"}
{"@timestamp":"2020-06-21T21:46:12.207Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@8d56ddd"}
{"@timestamp":"2020-06-21T21:46:12.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55452], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:46:12.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55452 to client view of cluster"}
{"@timestamp":"2020-06-21T21:46:12.220Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.220-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55464 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:12.222Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:12.222-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55464 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:46:12.224Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd524ad12ac3244ec44f4', description='null'}-localhost:55452","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:3, serverValue:1}] to localhost:55452"}
{"@timestamp":"2020-06-21T21:46:12.226Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd524ad12ac3244ec44f4', description='null'}-localhost:55452","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55452, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=883300}"}
{"@timestamp":"2020-06-21T21:46:12.227Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd524ad12ac3244ec44f4', description='null'}-localhost:55452","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:46:15.207Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:15.216Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.216-0300 I -        [conn1] end connection 127.0.0.1:55464 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:15.216Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.217-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55466 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:15.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.217-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:46:15.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.217-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:46:15.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.218-0300 I NETWORK  [conn2] closing listening socket: 532"}
{"@timestamp":"2020-06-21T21:46:15.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.218-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:46:15.217Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.218-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:46:15.218Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:15.219-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:46:16.660Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:16.660-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:46:16.660Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:16.660-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:46:16.661Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:16.660-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:46:16.661Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-22","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:16.660-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:46:17.821Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:46:17.826Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:46:17.849Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:18.080Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:18.081Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@60035f1e]"}
{"@timestamp":"2020-06-21T21:46:19.812Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:20.219Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:20.219Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:20.249Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 29ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:20.320Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:20.320Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:20.342Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:46:20.342Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:46:20.437Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:46:20.591Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:46:20.813Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:46:20.814Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:46:20.814Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:46:20.831Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:46:20.832Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1017 ms"}
{"@timestamp":"2020-06-21T21:46:22.189Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@cec9f23] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:46:23.005Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.095-0300 I CONTROL  [initandlisten] MongoDB starting : pid=3568 port=55481 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-e2ce3cc1-bb54-4a00-bc90-d6e1a5bb1dad 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:46:23.097Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:46:23.098Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:46:23.098Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:46:23.098Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:46:23.098Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.097-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55481 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-e2ce3cc1-bb54-4a00-bc90-d6e1a5bb1dad\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:46:23.099Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.099-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:46:23.966Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.966-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:46:23.967Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.966-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:23.967Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.966-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:46:23.968Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.966-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:46:23.968Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:23.966-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:25.182Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.182-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:46:25.182Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.182-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-e2ce3cc1-bb54-4a00-bc90-d6e1a5bb1dad/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:46:25.617Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.617-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:46:25.619Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.618-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:46:25.696Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.696-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:46:25.699Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.699-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:46:25.702Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.702-0300 I NETWORK  [thread1] waiting for connections on port 55481"}
{"@timestamp":"2020-06-21T21:46:25.703Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@6465f4a"}
{"@timestamp":"2020-06-21T21:46:25.732Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55481], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:46:25.733Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55481 to client view of cluster"}
{"@timestamp":"2020-06-21T21:46:25.737Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.737-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55491 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:25.738Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:25.738-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55491 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:46:25.740Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd531ad12ac3244ec44f5', description='null'}-localhost:55481","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:4, serverValue:1}] to localhost:55481"}
{"@timestamp":"2020-06-21T21:46:25.741Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd531ad12ac3244ec44f5', description='null'}-localhost:55481","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55481, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=666000}"}
{"@timestamp":"2020-06-21T21:46:25.742Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd531ad12ac3244ec44f5', description='null'}-localhost:55481","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:46:26.330Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:26.343Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.343-0300 I -        [conn1] end connection 127.0.0.1:55491 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:26.344Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.344-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55493 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:26.345Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.345-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:46:26.345Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.345-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:46:26.345Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.345-0300 I NETWORK  [conn2] closing listening socket: 532"}
{"@timestamp":"2020-06-21T21:46:26.345Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.346-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:46:26.346Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.346-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:46:26.348Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.348-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:46:26.923Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.911-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:46:26.924Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.912-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:46:26.925Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-28","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:26.912-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:46:28.048Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:46:28.049Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:46:28.058Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:28.267Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:28.268Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@3b21f625]"}
{"@timestamp":"2020-06-21T21:46:29.937Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:30.030Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:30.030Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:30.060Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 29ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:30.800Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:46:30.919Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.918-0300 I CONTROL  [initandlisten] MongoDB starting : pid=13136 port=55505 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-75c6d049-ce5d-4145-85e6-b40415fdfbd6 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:46:30.920Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:46:30.921Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.919-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55505 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-75c6d049-ce5d-4145-85e6-b40415fdfbd6\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:46:30.922Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:30.922-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:46:31.852Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:31.852-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:46:31.853Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:31.852-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:31.853Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:31.852-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:46:31.853Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:31.852-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:46:31.853Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:31.852-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:46:33.010Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.011-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:46:33.011Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.011-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-75c6d049-ce5d-4145-85e6-b40415fdfbd6/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:46:33.428Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.428-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:46:33.428Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.429-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:46:33.440Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.440-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:46:33.442Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.442-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:46:33.444Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.444-0300 I NETWORK  [thread1] waiting for connections on port 55505"}
{"@timestamp":"2020-06-21T21:46:33.445Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@11f4d2b8"}
{"@timestamp":"2020-06-21T21:46:33.451Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55505], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:46:33.451Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55505 to client view of cluster"}
{"@timestamp":"2020-06-21T21:46:33.456Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.456-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55515 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:33.458Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:33.458-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55515 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:46:33.463Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd539ad12ac3244ec44f6', description='null'}-localhost:55505","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:5, serverValue:1}] to localhost:55505"}
{"@timestamp":"2020-06-21T21:46:33.465Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd539ad12ac3244ec44f6', description='null'}-localhost:55505","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55505, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1101000}"}
{"@timestamp":"2020-06-21T21:46:33.465Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"cluster-ClusterId{value='5eefd539ad12ac3244ec44f6', description='null'}-localhost:55505","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:46:33.747Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:46:34.004Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"Started MancalaRepositorioTests in 5.727 seconds (JVM running for 132.71)"}
{"@timestamp":"2020-06-21T21:46:34.362Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:34.362-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55516 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:46:34.363Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:34.363-0300 I NETWORK  [conn2] received client metadata from 127.0.0.1:55516 conn2: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:46:34.366Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:6, serverValue:2}] to localhost:55505"}
{"@timestamp":"2020-06-21T21:46:34.841Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:34.841-0300 I COMMAND  [conn2] command test.games command: insert { insert: \"games\", ordered: true, documents: [ { _id: ObjectId('5eefd53aad12ac3244ec44f7'), buracos: [ { _id: 1, pedras: 6 }, { _id: 2, pedras: 6 }, { _id: 3, pedras: 6 }, { _id: 4, pedras: 6 }, { _id: 5, pedras: 6 }, { _id: 6, pedras: 6 }, { _id: 7, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" }, { _id: 8, pedras: 6 }, { _id: 9, pedras: 6 }, { _id: 10, pedras: 6 }, { _id: 11, pedras: 6 }, { _id: 12, pedras: 6 }, { _id: 13, pedras: 6 }, { _id: 14, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" } ], indiceAtual: 0, _class: \"com.furb.mancalajogo.model.MancalaJogo\" } ] } ninserted:1 keysInserted:1 numYields:0 reslen:44 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_query 264ms"}
{"@timestamp":"2020-06-21T21:46:35.025Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.mongodb.driver.connection","message":"Closed connection [connectionId{localValue:6, serverValue:2}] to localhost:55505 because the pool has been closed."}
{"@timestamp":"2020-06-21T21:46:35.026Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.027-0300 I -        [conn2] end connection 127.0.0.1:55516 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:46:35.027Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.027-0300 I -        [conn1] end connection 127.0.0.1:55515 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:35.027Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.028-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55517 #3 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:46:35.028Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.028-0300 I COMMAND  [conn3] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:46:35.028Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.028-0300 I NETWORK  [conn3] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:46:35.028Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.028-0300 I NETWORK  [conn3] closing listening socket: 548"}
{"@timestamp":"2020-06-21T21:46:35.028Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.028-0300 I NETWORK  [conn3] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:46:35.028Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.029-0300 I FTDC     [conn3] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:46:35.029Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.030-0300 I STORAGE  [conn3] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:46:35.521Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.522-0300 I STORAGE  [conn3] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:46:35.522Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.522-0300 I CONTROL  [conn3] now exiting"}
{"@timestamp":"2020-06-21T21:46:35.523Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"Thread-33","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:46:35.523-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:46:38.088Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:38.419Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:38.419Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:38.445Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 26ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:38.491Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:38.491Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:38.505Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:46:38.505Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:46:38.567Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:46:39.001Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:46:39.237Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:39.254Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:39.466Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:39.467Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@131af11d]"}
{"@timestamp":"2020-06-21T21:46:41.038Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:41.370Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:41.370Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:41.396Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 25ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:41.439Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:41.440Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:41.453Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:46:41.453Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:46:41.541Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:46:41.680Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:46:41.891Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:41.909Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:42.141Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:42.141Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@1d502d6c]"}
{"@timestamp":"2020-06-21T21:46:43.884Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:46:44.208Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:44.209Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:44.235Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 25ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:46:44.286Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:46:44.287Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:46:44.300Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:46:44.300Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:46:44.355Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:46:44.503Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:46:44.684Z","severity":"WARN","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:46:44.708Z","severity":"INFO","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:46:44.942Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:46:44.942Z","severity":"ERROR","service":"mancala-api","pid":10012,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@67e85559]"}
