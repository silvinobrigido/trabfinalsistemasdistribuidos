{"@timestamp":"2020-06-21T21:49:36.402Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:49:54.535Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:49:54.561Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:49:55.187Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 561ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:49:56.610Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:49:56.618Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:49:56.724Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:49:56.725Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 50ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:49:58.233Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:50:01.012Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:50:02.578Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:50:02.607Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:50:10.636Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)\r\n\tat java.util.Optional.orElseGet(Optional.java:267)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 65 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 83 common frames omitted\r\n","@timestamp":"2020-06-21T21:50:10.644Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1921ad94] to prepare test instance [com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests@43a7203e]"}
{"@timestamp":"2020-06-21T21:50:12.933Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:50:13.491Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:50:13.492Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:50:13.522Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 30ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:50:13.640Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:50:13.641Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:50:13.664Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:50:13.665Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:50:14.314Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:50:33.574Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:50:36.801Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:50:36.855Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:50:36.856Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:50:37.267Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:50:37.268Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 24330 ms"}
{"@timestamp":"2020-06-21T21:50:38.737Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-06-21T21:50:38.737Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-06-21T21:50:38.896Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.netflix.config.DynamicPropertyFactory","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40c6d1ef"}
{"@timestamp":"2020-06-21T21:50:42.045Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@38874eb5] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:50:48.867Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:50:48.918Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.916-0300 I CONTROL  [initandlisten] MongoDB starting : pid=4816 port=55842 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-2d3420a6-597b-4e57-9703-7aa73f7f6ca8 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:50:48.918Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:50:48.918Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:50:48.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:50:48.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:50:48.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:50:48.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:50:48.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:50:48.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:50:48.921Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.918-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55842 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-2d3420a6-597b-4e57-9703-7aa73f7f6ca8\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:50:48.921Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:48.920-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:50:49.857Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:49.857-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:50:49.858Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:49.857-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:50:49.859Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:49.857-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:50:49.859Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:49.857-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:50:49.859Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:49.857-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:50:55.092Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.092-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:50:55.093Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.092-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-2d3420a6-597b-4e57-9703-7aa73f7f6ca8/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:50:55.605Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.605-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:50:55.606Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.605-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:50:55.627Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.627-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:50:55.629Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.629-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:50:55.630Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:55.630-0300 I NETWORK  [thread1] waiting for connections on port 55842"}
{"@timestamp":"2020-06-21T21:50:55.631Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@e296794"}
{"@timestamp":"2020-06-21T21:50:57.271Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55842], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:50:57.272Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55842 to client view of cluster"}
{"@timestamp":"2020-06-21T21:50:57.420Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:57.420-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55858 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:50:57.487Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:50:57.488-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55858 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:50:57.508Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6413a1273017e2c3793', description='null'}-localhost:55842","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:55842"}
{"@timestamp":"2020-06-21T21:50:57.512Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6413a1273017e2c3793', description='null'}-localhost:55842","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55842, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1470800}"}
{"@timestamp":"2020-06-21T21:50:57.518Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6413a1273017e2c3793', description='null'}-localhost:55842","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:51:02.961Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:03.219Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.219-0300 I -        [conn1] end connection 127.0.0.1:55858 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:03.221Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.221-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55861 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:03.221Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.222-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:51:03.222Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.222-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:51:03.222Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.222-0300 I NETWORK  [conn2] closing listening socket: 524"}
{"@timestamp":"2020-06-21T21:51:03.222Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.222-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:51:03.222Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.222-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:51:03.225Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:03.225-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:51:04.119Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:04.119-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:51:04.119Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:04.119-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:51:04.120Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:04.119-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:05.697Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:51:05.701Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:05.739Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:06.125Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:06.128Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@711261c7]"}
{"@timestamp":"2020-06-21T21:51:08.222Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:08.694Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:08.695Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:08.749Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 53ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:08.820Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:08.820Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:08.841Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:08.842Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:09.009Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:51:09.250Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:09.466Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:51:09.468Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:09.470Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:51:09.493Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:51:09.494Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1269 ms"}
{"@timestamp":"2020-06-21T21:51:10.759Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5d414943] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:51:11.838Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:51:11.955Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.954-0300 I CONTROL  [initandlisten] MongoDB starting : pid=11668 port=55887 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ef453261-07c4-4792-8413-19813b86007f 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:51:11.955Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:51:11.955Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:51:11.955Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:51:11.956Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.955-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55887 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ef453261-07c4-4792-8413-19813b86007f\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:51:11.957Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:11.958-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:51:12.795Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:12.796-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:51:12.796Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:12.796-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:12.796Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:12.796-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:51:12.796Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:12.796-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:51:12.797Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:12.796-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:14.472Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:14.471-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:51:14.472Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:14.472-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-ef453261-07c4-4792-8413-19813b86007f/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:51:15.950Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:15.950-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:51:15.950Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:15.950-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:51:16.039Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:16.039-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:51:16.040Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:16.040-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:51:16.042Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:16.042-0300 I NETWORK  [thread1] waiting for connections on port 55887"}
{"@timestamp":"2020-06-21T21:51:16.043Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@31e3b882"}
{"@timestamp":"2020-06-21T21:51:16.054Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55887], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:51:16.055Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55887 to client view of cluster"}
{"@timestamp":"2020-06-21T21:51:16.060Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:16.060-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55891 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:16.062Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:16.062-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55891 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:51:16.067Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6543a1273017e2c3794', description='null'}-localhost:55887","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:55887"}
{"@timestamp":"2020-06-21T21:51:16.069Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6543a1273017e2c3794', description='null'}-localhost:55887","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55887, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=624900}"}
{"@timestamp":"2020-06-21T21:51:16.069Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6543a1273017e2c3794', description='null'}-localhost:55887","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:51:17.290Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:17.305Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.306-0300 I -        [conn1] end connection 127.0.0.1:55891 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:17.306Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.306-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55893 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:17.306Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.307-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:51:17.306Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.307-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:51:17.307Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.307-0300 I NETWORK  [conn2] closing listening socket: 532"}
{"@timestamp":"2020-06-21T21:51:17.307Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.307-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:51:17.307Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.307-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:51:17.308Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:17.309-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:51:18.361Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:18.361-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:51:18.362Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:18.362-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:51:18.363Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:18.362-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:18.363Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:18.362-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:19.549Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:51:19.555Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:19.569Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:19.629Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:51:19.803Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:19.804Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@762e3836]"}
{"@timestamp":"2020-06-21T21:51:21.569Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:21.934Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:21.935Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:21.984Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 46ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:22.053Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:22.054Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:22.074Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:22.075Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:22.162Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:51:22.311Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:22.474Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:51:22.475Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:22.475Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:51:22.505Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:51:22.505Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 932 ms"}
{"@timestamp":"2020-06-21T21:51:23.874Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@34c31a34] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:51:24.846Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:51:24.947Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.946-0300 I CONTROL  [initandlisten] MongoDB starting : pid=11368 port=55911 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ac70c00c-1826-4800-803e-971af8cd29af 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:51:24.947Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.947-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:51:24.947Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.947-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:51:24.947Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.947-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:51:24.947Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.947-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:51:24.948Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.948-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:51:24.948Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.948-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:51:24.948Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.948-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:51:24.948Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.948-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:51:24.948Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.948-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55911 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ac70c00c-1826-4800-803e-971af8cd29af\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:51:24.949Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:24.950-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:51:25.718Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:25.717-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:51:25.718Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:25.717-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:25.719Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:25.717-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:51:25.719Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:25.718-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:51:25.719Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:25.718-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:27.239Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.239-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:51:27.239Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.239-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-ac70c00c-1826-4800-803e-971af8cd29af/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:51:27.584Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.584-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:51:27.585Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.585-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:51:27.595Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.595-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:51:27.598Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.598-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:51:27.601Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.601-0300 I NETWORK  [thread1] waiting for connections on port 55911"}
{"@timestamp":"2020-06-21T21:51:27.602Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@6d7e2c53"}
{"@timestamp":"2020-06-21T21:51:27.627Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55911], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:51:27.628Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55911 to client view of cluster"}
{"@timestamp":"2020-06-21T21:51:27.631Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.632-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55921 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:27.633Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:27.634-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55921 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:51:27.638Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd65f3a1273017e2c3795', description='null'}-localhost:55911","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:3, serverValue:1}] to localhost:55911"}
{"@timestamp":"2020-06-21T21:51:27.639Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd65f3a1273017e2c3795', description='null'}-localhost:55911","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55911, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=974700}"}
{"@timestamp":"2020-06-21T21:51:27.640Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd65f3a1273017e2c3795', description='null'}-localhost:55911","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:51:28.447Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:28.458Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.458-0300 I -        [conn1] end connection 127.0.0.1:55921 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:28.459Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.459-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55923 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:28.460Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.460-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:51:28.460Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.460-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:51:28.460Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.460-0300 I NETWORK  [conn2] closing listening socket: 544"}
{"@timestamp":"2020-06-21T21:51:28.460Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.460-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:51:28.460Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.460-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:51:28.461Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.462-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:51:28.978Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.979-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:51:28.979Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.980-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:51:28.980Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:28.980-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:30.130Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:51:30.134Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:30.155Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:30.226Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:51:30.383Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:30.384Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@732ffb6a]"}
{"@timestamp":"2020-06-21T21:51:32.038Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:32.562Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:32.564Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:32.612Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 47ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:32.707Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:32.708Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:32.732Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:32.732Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:32.851Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:51:33.116Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:33.347Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:51:33.348Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:33.348Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:51:33.365Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:51:33.365Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1324 ms"}
{"@timestamp":"2020-06-21T21:51:34.718Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@379899f4] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:51:35.824Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:51:35.918Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.917-0300 I CONTROL  [initandlisten] MongoDB starting : pid=888 port=55946 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-3165cfc2-af48-4b69-bfcb-ee657fb21979 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:51:35.919Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:51:35.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:51:35.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.919-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55946 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-3165cfc2-af48-4b69-bfcb-ee657fb21979\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:51:35.920Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:35.921-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:51:36.683Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:36.683-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:51:36.683Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:36.683-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:36.684Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:36.683-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:51:36.684Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:36.683-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:51:36.684Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:36.683-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:38.191Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.191-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:51:38.191Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.191-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-3165cfc2-af48-4b69-bfcb-ee657fb21979/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:51:38.674Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.674-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:51:38.674Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.674-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:51:38.696Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.696-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:51:38.699Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.699-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:51:38.702Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.702-0300 I NETWORK  [thread1] waiting for connections on port 55946"}
{"@timestamp":"2020-06-21T21:51:38.703Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@24f1d4f3"}
{"@timestamp":"2020-06-21T21:51:38.729Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55946], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:51:38.730Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55946 to client view of cluster"}
{"@timestamp":"2020-06-21T21:51:38.736Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.736-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55949 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:38.741Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:38.741-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55949 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:51:38.744Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd66a3a1273017e2c3796', description='null'}-localhost:55946","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:4, serverValue:1}] to localhost:55946"}
{"@timestamp":"2020-06-21T21:51:38.745Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd66a3a1273017e2c3796', description='null'}-localhost:55946","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55946, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=702600}"}
{"@timestamp":"2020-06-21T21:51:38.746Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd66a3a1273017e2c3796', description='null'}-localhost:55946","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:51:39.316Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:39.338Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.338-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55951 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:51:39.338Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.339-0300 I -        [conn1] end connection 127.0.0.1:55949 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:51:39.342Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.343-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:51:39.343Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.343-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:51:39.343Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.344-0300 I NETWORK  [conn2] closing listening socket: 532"}
{"@timestamp":"2020-06-21T21:51:39.344Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.345-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:51:39.347Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.348-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:51:39.350Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.350-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:51:39.888Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.888-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:51:39.889Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.888-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:51:39.889Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:39.888-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:41.025Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:51:41.050Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:51:41.079Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:41.291Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:41.292Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@66121af9]"}
{"@timestamp":"2020-06-21T21:51:42.994Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:43.084Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:43.085Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:43.123Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 37ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:43.848Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:51:43.951Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.950-0300 I CONTROL  [initandlisten] MongoDB starting : pid=4948 port=55963 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-d1dc9041-8741-47b0-b12c-c4551d67e3a5 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:51:43.951Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:51:43.952Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.951-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 55963 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-d1dc9041-8741-47b0-b12c-c4551d67e3a5\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:51:43.953Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:43.953-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:51:44.817Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:44.817-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:51:44.817Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:44.817-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:44.817Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:44.817-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:51:44.817Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:44.817-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:51:44.817Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:44.817-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:51:46.252Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.253-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:51:46.253Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.253-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-d1dc9041-8741-47b0-b12c-c4551d67e3a5/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:51:46.732Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.731-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:51:46.732Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.732-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:51:46.740Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.740-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:51:46.741Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.741-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:51:46.742Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.742-0300 I NETWORK  [thread1] waiting for connections on port 55963"}
{"@timestamp":"2020-06-21T21:51:46.742Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@615c9e9b"}
{"@timestamp":"2020-06-21T21:51:46.745Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:55963], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:51:46.745Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:55963 to client view of cluster"}
{"@timestamp":"2020-06-21T21:51:46.750Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.749-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55974 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:46.751Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:46.751-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:55974 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:51:46.757Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6723a1273017e2c3797', description='null'}-localhost:55963","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:5, serverValue:1}] to localhost:55963"}
{"@timestamp":"2020-06-21T21:51:46.757Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6723a1273017e2c3797', description='null'}-localhost:55963","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:55963, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=540100}"}
{"@timestamp":"2020-06-21T21:51:46.758Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"cluster-ClusterId{value='5eefd6723a1273017e2c3797', description='null'}-localhost:55963","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:51:47.106Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"Started MancalaRepositorioTests in 5.8 seconds (JVM running for 155.122)"}
{"@timestamp":"2020-06-21T21:51:47.490Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:47.490-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55975 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:51:47.492Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:47.492-0300 I NETWORK  [conn2] received client metadata from 127.0.0.1:55975 conn2: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:51:47.496Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:6, serverValue:2}] to localhost:55963"}
{"@timestamp":"2020-06-21T21:51:48.151Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.151-0300 I COMMAND  [conn2] command test.games command: insert { insert: \"games\", ordered: true, documents: [ { _id: ObjectId('5eefd6733a1273017e2c3798'), buracos: [ { _id: 1, pedras: 6 }, { _id: 2, pedras: 6 }, { _id: 3, pedras: 6 }, { _id: 4, pedras: 6 }, { _id: 5, pedras: 6 }, { _id: 6, pedras: 6 }, { _id: 7, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" }, { _id: 8, pedras: 6 }, { _id: 9, pedras: 6 }, { _id: 10, pedras: 6 }, { _id: 11, pedras: 6 }, { _id: 12, pedras: 6 }, { _id: 13, pedras: 6 }, { _id: 14, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" } ], indiceAtual: 0, _class: \"com.furb.mancalajogo.model.MancalaJogo\" } ] } ninserted:1 keysInserted:1 numYields:0 reslen:44 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_query 495ms"}
{"@timestamp":"2020-06-21T21:51:48.346Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.mongodb.driver.connection","message":"Closed connection [connectionId{localValue:6, serverValue:2}] to localhost:55963 because the pool has been closed."}
{"@timestamp":"2020-06-21T21:51:48.347Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.347-0300 I -        [conn2] end connection 127.0.0.1:55975 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:51:48.348Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.347-0300 I -        [conn1] end connection 127.0.0.1:55974 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:48.348Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:55976 #3 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:51:48.349Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I COMMAND  [conn3] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:51:48.349Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I NETWORK  [conn3] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:51:48.349Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I NETWORK  [conn3] closing listening socket: 532"}
{"@timestamp":"2020-06-21T21:51:48.349Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I NETWORK  [conn3] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:51:48.349Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.349-0300 I FTDC     [conn3] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:51:48.350Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.351-0300 I STORAGE  [conn3] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:51:48.933Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.933-0300 I STORAGE  [conn3] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:51:48.934Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.934-0300 I CONTROL  [conn3] now exiting"}
{"@timestamp":"2020-06-21T21:51:48.935Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:51:48.934-0300 I CONTROL  [conn3] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:51:50.976Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:51.316Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:51.317Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:51.352Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 34ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:51.413Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:51.413Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:51.437Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:51.437Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:51.528Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:51:51.994Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:52.163Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:52.181Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:52.401Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:52.402Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@500039b3]"}
{"@timestamp":"2020-06-21T21:51:54.021Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:54.343Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:54.343Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:54.372Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 28ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:54.416Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:54.417Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:54.432Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:54.432Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:54.508Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:51:54.640Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:54.988Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:55.006Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:55.278Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:55.278Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@4d6cdebb]"}
{"@timestamp":"2020-06-21T21:51:57.063Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:51:57.500Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:57.501Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:57.545Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 41ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:51:57.603Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:51:57.603Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:51:57.628Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:51:57.629Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:51:57.720Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:51:57.888Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:51:58.275Z","severity":"WARN","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:51:58.293Z","severity":"INFO","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:51:58.592Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:51:58.592Z","severity":"ERROR","service":"mancala-api","pid":9204,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@248f1090]"}
