{"@timestamp":"2020-06-21T22:16:51.643Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:16:52.718Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:16:52.719Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:16:52.964Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 238ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:16:53.404Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:16:53.408Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:16:53.446Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:16:53.446Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:16:54.110Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T22:16:55.465Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:16:57.132Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:16:57.166Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:16:57.598Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)\r\n\tat java.util.Optional.orElseGet(Optional.java:267)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 65 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 83 common frames omitted\r\n","@timestamp":"2020-06-21T22:16:57.626Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1921ad94] to prepare test instance [com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests@57bdceaa]"}
{"@timestamp":"2020-06-21T22:16:59.438Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:16:59.925Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:16:59.926Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:16:59.963Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 36ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:17:00.066Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:00.067Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:00.092Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:17:00.092Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:17:00.385Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T22:17:01.314Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:17:02.517Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T22:17:02.551Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:02.560Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T22:17:03.094Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T22:17:03.094Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 3650 ms"}
{"@timestamp":"2020-06-21T22:17:03.654Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-06-21T22:17:03.655Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-06-21T22:17:03.697Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.netflix.config.DynamicPropertyFactory","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1c23e369"}
{"@timestamp":"2020-06-21T22:17:06.438Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3a7dcfb7] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T22:17:08.578Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T22:17:09.043Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.042-0300 I CONTROL  [initandlisten] MongoDB starting : pid=1404 port=57184 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-1e8ce013-a6af-4950-b3bf-8bbd60df7497 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T22:17:09.044Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T22:17:09.044Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T22:17:09.045Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T22:17:09.045Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T22:17:09.045Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T22:17:09.045Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T22:17:09.046Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T22:17:09.046Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T22:17:09.046Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.044-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 57184 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-1e8ce013-a6af-4950-b3bf-8bbd60df7497\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T22:17:09.046Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:09.047-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T22:17:10.597Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:10.597-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T22:17:10.597Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:10.597-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:10.597Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:10.597-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T22:17:10.598Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:10.597-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T22:17:10.598Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:10.597-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:16.941Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:16.941-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T22:17:16.941Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:16.941-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-1e8ce013-a6af-4950-b3bf-8bbd60df7497/diagnostic.data'"}
{"@timestamp":"2020-06-21T22:17:17.352Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:17.353-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T22:17:17.353Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:17.353-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T22:17:17.364Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:17.365-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T22:17:17.368Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:17.369-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T22:17:17.371Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:17.371-0300 I NETWORK  [thread1] waiting for connections on port 57184"}
{"@timestamp":"2020-06-21T22:17:17.371Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@9fc2f89"}
{"@timestamp":"2020-06-21T22:17:18.861Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:57184], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T22:17:18.862Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:57184 to client view of cluster"}
{"@timestamp":"2020-06-21T22:17:19.130Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:19.130-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57191 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:19.216Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:19.216-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:57191 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:17:19.256Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc6e29015c721b81a759', description='null'}-localhost:57184","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:57184"}
{"@timestamp":"2020-06-21T22:17:19.261Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc6e29015c721b81a759', description='null'}-localhost:57184","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:57184, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=2248800}"}
{"@timestamp":"2020-06-21T22:17:19.263Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc6e29015c721b81a759', description='null'}-localhost:57184","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T22:17:25.467Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:17:25.608Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.608-0300 I -        [conn1] end connection 127.0.0.1:57191 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:25.610Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.610-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57192 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:25.611Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.611-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T22:17:25.611Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.611-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T22:17:25.611Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.611-0300 I NETWORK  [conn2] closing listening socket: 524"}
{"@timestamp":"2020-06-21T22:17:25.612Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.611-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T22:17:25.612Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.611-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T22:17:25.619Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:25.619-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T22:17:26.023Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:26.023-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T22:17:26.024Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:26.024-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T22:17:26.024Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:26.024-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T22:17:27.201Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T22:17:27.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:27.242Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:17:27.639Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T22:17:27.640Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@7f38545a]"}
{"@timestamp":"2020-06-21T22:17:29.505Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:17:30.107Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:30.108Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:30.186Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 77ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:17:30.314Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:30.314Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:30.334Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:17:30.334Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:17:30.441Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T22:17:30.660Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:17:30.893Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T22:17:30.895Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:30.896Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T22:17:30.916Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T22:17:30.916Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1406 ms"}
{"@timestamp":"2020-06-21T22:17:32.376Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@70e560ef] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T22:17:33.317Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T22:17:33.419Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.418-0300 I CONTROL  [initandlisten] MongoDB starting : pid=14124 port=57208 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-71eb1dc7-bf3e-4253-b0ab-3cc931ce87b6 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T22:17:33.419Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T22:17:33.419Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T22:17:33.419Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T22:17:33.419Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T22:17:33.420Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T22:17:33.420Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T22:17:33.420Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T22:17:33.420Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.419-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T22:17:33.420Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.420-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 57208 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-71eb1dc7-bf3e-4253-b0ab-3cc931ce87b6\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T22:17:33.421Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:33.421-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T22:17:34.222Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:34.222-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T22:17:34.223Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:34.222-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:34.223Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:34.222-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T22:17:34.224Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:34.222-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T22:17:34.224Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:34.222-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:35.561Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:35.561-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T22:17:35.561Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:35.561-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-71eb1dc7-bf3e-4253-b0ab-3cc931ce87b6/diagnostic.data'"}
{"@timestamp":"2020-06-21T22:17:35.999Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:35.999-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T22:17:36.000Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:35.999-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T22:17:36.011Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.010-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T22:17:36.014Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.014-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T22:17:36.021Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.020-0300 I NETWORK  [thread1] waiting for connections on port 57208"}
{"@timestamp":"2020-06-21T22:17:36.022Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@5702e6f3"}
{"@timestamp":"2020-06-21T22:17:36.034Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:57208], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T22:17:36.035Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:57208 to client view of cluster"}
{"@timestamp":"2020-06-21T22:17:36.042Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.042-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57215 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:36.044Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.044-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:57215 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:17:36.048Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8029015c721b81a75a', description='null'}-localhost:57208","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:57208"}
{"@timestamp":"2020-06-21T22:17:36.049Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8029015c721b81a75a', description='null'}-localhost:57208","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:57208, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=876100}"}
{"@timestamp":"2020-06-21T22:17:36.051Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8029015c721b81a75a', description='null'}-localhost:57208","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T22:17:36.734Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:17:36.747Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.747-0300 I -        [conn1] end connection 127.0.0.1:57215 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:36.747Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.747-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57216 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:36.748Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.748-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T22:17:36.749Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.748-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T22:17:36.749Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.748-0300 I NETWORK  [conn2] closing listening socket: 540"}
{"@timestamp":"2020-06-21T22:17:36.749Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.748-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T22:17:36.749Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.748-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T22:17:36.750Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:36.750-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T22:17:37.141Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:37.141-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T22:17:37.141Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:37.141-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T22:17:37.142Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:37.141-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T22:17:38.315Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T22:17:38.331Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:38.350Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:17:38.577Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T22:17:38.594Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T22:17:38.595Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@ae4a043]"}
{"@timestamp":"2020-06-21T22:17:40.449Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:17:40.898Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:40.898Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:40.972Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 73ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:17:41.102Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:41.103Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:41.127Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:17:41.128Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:17:41.253Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T22:17:41.405Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:17:41.613Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T22:17:41.614Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:41.615Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T22:17:41.630Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T22:17:41.630Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1165 ms"}
{"@timestamp":"2020-06-21T22:17:43.057Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3b5d0c4d] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T22:17:44.089Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T22:17:44.183Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.182-0300 I CONTROL  [initandlisten] MongoDB starting : pid=10168 port=57238 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-184e2e78-d43c-45eb-af7c-0a99cabc39b7 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T22:17:44.183Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T22:17:44.184Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T22:17:44.185Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T22:17:44.185Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.183-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 57238 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-184e2e78-d43c-45eb-af7c-0a99cabc39b7\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T22:17:44.185Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:44.186-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T22:17:45.388Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:45.388-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T22:17:45.389Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:45.388-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:45.389Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:45.388-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T22:17:45.389Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:45.388-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T22:17:45.390Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:45.388-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:46.882Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:46.882-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T22:17:46.882Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:46.882-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-184e2e78-d43c-45eb-af7c-0a99cabc39b7/diagnostic.data'"}
{"@timestamp":"2020-06-21T22:17:47.221Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.221-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T22:17:47.222Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.221-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T22:17:47.232Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.232-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T22:17:47.233Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.234-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T22:17:47.235Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.235-0300 I NETWORK  [thread1] waiting for connections on port 57238"}
{"@timestamp":"2020-06-21T22:17:47.236Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@16486ab3"}
{"@timestamp":"2020-06-21T22:17:47.253Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:57238], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T22:17:47.253Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:57238 to client view of cluster"}
{"@timestamp":"2020-06-21T22:17:47.256Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.256-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57240 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:47.261Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.261-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:57240 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:17:47.264Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8b29015c721b81a75b', description='null'}-localhost:57238","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:3, serverValue:1}] to localhost:57238"}
{"@timestamp":"2020-06-21T22:17:47.265Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8b29015c721b81a75b', description='null'}-localhost:57238","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:57238, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=831000}"}
{"@timestamp":"2020-06-21T22:17:47.266Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc8b29015c721b81a75b', description='null'}-localhost:57238","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T22:17:47.969Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:17:47.983Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.983-0300 I -        [conn1] end connection 127.0.0.1:57240 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:47.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57241 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:47.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T22:17:47.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T22:17:47.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I NETWORK  [conn2] closing listening socket: 532"}
{"@timestamp":"2020-06-21T22:17:47.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T22:17:47.985Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.984-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T22:17:47.986Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:47.986-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T22:17:48.498Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:48.498-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T22:17:48.499Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:48.499-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T22:17:48.499Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:48.499-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T22:17:49.622Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T22:17:49.625Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:49.653Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:17:49.911Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T22:17:49.913Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@771c4015]"}
{"@timestamp":"2020-06-21T22:17:51.682Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:17:52.151Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:52.151Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:52.202Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 50ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:17:52.276Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:17:52.276Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:17:52.310Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:17:52.311Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:17:52.450Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T22:17:52.651Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:17:52.870Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T22:17:52.905Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T22:17:52.906Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T22:17:52.907Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T22:17:52.925Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T22:17:52.925Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1241 ms"}
{"@timestamp":"2020-06-21T22:17:54.109Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@49ffd0cb] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T22:17:55.111Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T22:17:55.205Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.205-0300 I CONTROL  [initandlisten] MongoDB starting : pid=6420 port=57260 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-7e857b78-54f5-4c2f-a772-59b97105a286 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T22:17:55.206Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T22:17:55.207Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T22:17:55.207Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T22:17:55.207Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.206-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 57260 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-7e857b78-54f5-4c2f-a772-59b97105a286\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T22:17:55.207Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.208-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T22:17:55.789Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.790-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T22:17:55.790Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.790-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:55.791Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.790-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T22:17:55.791Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.790-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T22:17:55.792Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:55.790-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:17:56.900Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:56.901-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T22:17:56.901Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:56.901-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-7e857b78-54f5-4c2f-a772-59b97105a286/diagnostic.data'"}
{"@timestamp":"2020-06-21T22:17:57.843Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.844-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T22:17:57.844Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.844-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T22:17:57.888Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.888-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T22:17:57.889Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.889-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T22:17:57.890Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.890-0300 I NETWORK  [thread1] waiting for connections on port 57260"}
{"@timestamp":"2020-06-21T22:17:57.891Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@1cc00f56"}
{"@timestamp":"2020-06-21T22:17:57.902Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:57260], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T22:17:57.903Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:57260 to client view of cluster"}
{"@timestamp":"2020-06-21T22:17:57.906Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.906-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57263 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:17:57.907Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:57.907-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:57263 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:17:57.909Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc9529015c721b81a75c', description='null'}-localhost:57260","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:4, serverValue:1}] to localhost:57260"}
{"@timestamp":"2020-06-21T22:17:57.910Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc9529015c721b81a75c', description='null'}-localhost:57260","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:57260, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=506200}"}
{"@timestamp":"2020-06-21T22:17:57.911Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdc9529015c721b81a75c', description='null'}-localhost:57260","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T22:17:58.942Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:17:59.008Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:58.977-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57265 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T22:17:59.010Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.008-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T22:17:59.010Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.008-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T22:17:59.010Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.008-0300 I NETWORK  [conn2] closing listening socket: 528"}
{"@timestamp":"2020-06-21T22:17:59.010Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.008-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T22:17:59.011Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.008-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T22:17:59.012Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.009-0300 I -        [conn1] end connection 127.0.0.1:57263 (2 connections now open)"}
{"@timestamp":"2020-06-21T22:17:59.012Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.010-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T22:17:59.983Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.984-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T22:17:59.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.984-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T22:17:59.984Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:17:59.984-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T22:18:01.103Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T22:18:01.107Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T22:18:01.128Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:18:01.373Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T22:18:01.375Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@12136fc6]"}
{"@timestamp":"2020-06-21T22:18:03.399Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:18:03.521Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:03.521Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:03.569Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 45ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:18:04.986Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T22:18:05.171Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.171-0300 I CONTROL  [initandlisten] MongoDB starting : pid=3136 port=57280 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-2e836576-0662-48e6-afd8-f1512f387650 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T22:18:05.172Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T22:18:05.173Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.172-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 57280 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-2e836576-0662-48e6-afd8-f1512f387650\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T22:18:05.174Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:05.174-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T22:18:07.167Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:07.167-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T22:18:07.167Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:07.167-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:18:07.168Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:07.167-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T22:18:07.168Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:07.167-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T22:18:07.168Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:07.167-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T22:18:08.804Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:08.804-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T22:18:08.804Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:08.805-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-2e836576-0662-48e6-afd8-f1512f387650/diagnostic.data'"}
{"@timestamp":"2020-06-21T22:18:09.644Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.644-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T22:18:09.644Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.644-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T22:18:09.688Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.688-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T22:18:09.690Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.691-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T22:18:09.691Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.692-0300 I NETWORK  [thread1] waiting for connections on port 57280"}
{"@timestamp":"2020-06-21T22:18:09.692Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@50f88cea"}
{"@timestamp":"2020-06-21T22:18:09.695Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:57280], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T22:18:09.696Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:57280 to client view of cluster"}
{"@timestamp":"2020-06-21T22:18:09.700Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.701-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57286 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:18:09.701Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:09.702-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:57286 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:18:09.703Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdca129015c721b81a75d', description='null'}-localhost:57280","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:5, serverValue:1}] to localhost:57280"}
{"@timestamp":"2020-06-21T22:18:09.705Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdca129015c721b81a75d', description='null'}-localhost:57280","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:57280, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=600800}"}
{"@timestamp":"2020-06-21T22:18:09.705Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"cluster-ClusterId{value='5eefdca129015c721b81a75d', description='null'}-localhost:57280","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T22:18:09.866Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T22:18:10.983Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"Started MancalaRepositorioTests in 9.592 seconds (JVM running for 84.856)"}
{"@timestamp":"2020-06-21T22:18:12.058Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:12.058-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57287 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T22:18:12.062Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:12.063-0300 I NETWORK  [conn2] received client metadata from 127.0.0.1:57287 conn2: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T22:18:12.066Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:6, serverValue:2}] to localhost:57280"}
{"@timestamp":"2020-06-21T22:18:13.322Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:13.322-0300 I COMMAND  [conn2] command test.games command: insert { insert: \"games\", ordered: true, documents: [ { _id: ObjectId('5eefdca429015c721b81a75e'), buracos: [ { _id: 1, pedras: 6 }, { _id: 2, pedras: 6 }, { _id: 3, pedras: 6 }, { _id: 4, pedras: 6 }, { _id: 5, pedras: 6 }, { _id: 6, pedras: 6 }, { _id: 7, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" }, { _id: 8, pedras: 6 }, { _id: 9, pedras: 6 }, { _id: 10, pedras: 6 }, { _id: 11, pedras: 6 }, { _id: 12, pedras: 6 }, { _id: 13, pedras: 6 }, { _id: 14, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" } ], indiceAtual: 0, _class: \"com.furb.mancalajogo.model.MancalaJogo\" } ] } ninserted:1 keysInserted:1 numYields:0 reslen:44 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_query 832ms"}
{"@timestamp":"2020-06-21T22:18:14.080Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.mongodb.driver.connection","message":"Closed connection [connectionId{localValue:6, serverValue:2}] to localhost:57280 because the pool has been closed."}
{"@timestamp":"2020-06-21T22:18:14.081Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.081-0300 I -        [conn2] end connection 127.0.0.1:57287 (2 connections now open)"}
{"@timestamp":"2020-06-21T22:18:14.081Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.081-0300 I -        [conn1] end connection 127.0.0.1:57286 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:18:14.083Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.083-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:57289 #3 (1 connection now open)"}
{"@timestamp":"2020-06-21T22:18:14.083Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.084-0300 I COMMAND  [conn3] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T22:18:14.083Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.084-0300 I NETWORK  [conn3] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T22:18:14.084Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.084-0300 I NETWORK  [conn3] closing listening socket: 536"}
{"@timestamp":"2020-06-21T22:18:14.084Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.084-0300 I NETWORK  [conn3] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T22:18:14.084Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.084-0300 I FTDC     [conn3] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T22:18:14.085Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.086-0300 I STORAGE  [conn3] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T22:18:14.897Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.898-0300 I STORAGE  [conn3] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T22:18:14.898Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.898-0300 I CONTROL  [conn3] now exiting"}
{"@timestamp":"2020-06-21T22:18:14.898Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T19:18:14.898-0300 I CONTROL  [conn3] shutting down with code:0"}
{"@timestamp":"2020-06-21T22:18:17.349Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:18:17.713Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:17.713Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:17.747Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 34ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:18:17.814Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:17.814Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:17.829Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:18:17.830Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:18:17.900Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T22:18:18.278Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:18:18.462Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:18:18.486Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:18:18.771Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T22:18:18.772Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@78e547aa]"}
{"@timestamp":"2020-06-21T22:18:20.391Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:18:20.774Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:20.774Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:20.832Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 57ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:18:20.884Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:20.885Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:20.899Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:18:20.900Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:18:21.004Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T22:18:21.164Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:18:21.361Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:18:21.379Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:18:21.648Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T22:18:21.649Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@45ee48e7]"}
{"@timestamp":"2020-06-21T22:18:23.610Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T22:18:24.007Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:24.008Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:24.044Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 36ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T22:18:24.133Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T22:18:24.133Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T22:18:24.154Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T22:18:24.154Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T22:18:24.351Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T22:18:24.635Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T22:18:24.846Z","severity":"WARN","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T22:18:24.869Z","severity":"INFO","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T22:18:25.206Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T22:18:25.206Z","severity":"ERROR","service":"mancala-api","pid":8608,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@2d87ac2b]"}
