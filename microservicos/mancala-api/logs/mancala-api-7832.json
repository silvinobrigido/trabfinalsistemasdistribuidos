{"@timestamp":"2020-06-21T21:55:25.997Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:55:27.874Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:55:27.875Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:55:28.169Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 286ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:55:28.714Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:55:28.718Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:55:28.763Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:55:28.763Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:55:30.701Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:55:35.775Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:55:39.636Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:55:39.659Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:55:43.329Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)\r\n\tat java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)\r\n\tat java.util.Optional.orElseGet(Optional.java:267)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 65 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 83 common frames omitted\r\n","@timestamp":"2020-06-21T21:55:43.335Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1921ad94] to prepare test instance [com.furb.mancalajogo.mancalaapi.MancalaApiApplicationTests@7bbdb220]"}
{"@timestamp":"2020-06-21T21:55:45.634Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:55:46.047Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:55:46.048Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:55:46.084Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 36ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:55:46.179Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:55:46.179Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:55:46.197Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:55:46.197Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:55:46.542Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:55:53.103Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:55:55.240Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:55:55.278Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:55:55.279Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:55:55.921Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:55:55.922Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 10285 ms"}
{"@timestamp":"2020-06-21T21:55:56.939Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-06-21T21:55:56.940Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.netflix.config.sources.URLConfigurationSource","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-06-21T21:55:57.120Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.netflix.config.DynamicPropertyFactory","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@58b5d5fc"}
{"@timestamp":"2020-06-21T21:55:59.862Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@25c16cf7] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:56:03.024Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:56:03.025Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.002-0300 I CONTROL  [initandlisten] MongoDB starting : pid=6840 port=56152 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-6167cdaf-c699-41dd-ab8b-57dd72f6b110 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:56:03.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:56:03.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:56:03.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:56:03.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:56:03.027Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:56:03.027Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:56:03.027Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:56:03.027Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:56:03.027Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.003-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 56152 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-6167cdaf-c699-41dd-ab8b-57dd72f6b110\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:56:03.028Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:03.005-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:56:04.669Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:04.669-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:56:04.669Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:04.669-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:56:04.670Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:04.669-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:56:04.670Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:04.669-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:56:04.671Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:04.669-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:56:12.582Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:12.582-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:56:12.583Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:12.582-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-6167cdaf-c699-41dd-ab8b-57dd72f6b110/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:56:13.562Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:13.563-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:56:13.563Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:13.563-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:56:13.627Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:13.627-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:56:13.629Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:13.629-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:56:13.630Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:13.631-0300 I NETWORK  [thread1] waiting for connections on port 56152"}
{"@timestamp":"2020-06-21T21:56:13.630Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@1cb929a9"}
{"@timestamp":"2020-06-21T21:56:16.984Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:56152], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:56:16.984Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:56152 to client view of cluster"}
{"@timestamp":"2020-06-21T21:56:17.188Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:17.188-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56178 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:17.269Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:17.269-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:56178 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:56:17.320Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7808bb61526acd92793', description='null'}-localhost:56152","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:56152"}
{"@timestamp":"2020-06-21T21:56:17.371Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7808bb61526acd92793', description='null'}-localhost:56152","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:56152, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=28767100}"}
{"@timestamp":"2020-06-21T21:56:17.374Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7808bb61526acd92793', description='null'}-localhost:56152","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:56:29.249Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:56:29.506Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.507-0300 I -        [conn1] end connection 127.0.0.1:56178 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:29.508Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56182 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:29.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:56:29.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:56:29.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I NETWORK  [conn2] closing listening socket: 524"}
{"@timestamp":"2020-06-21T21:56:29.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:56:29.510Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.509-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:56:29.511Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:29.512-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:56:30.342Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:30.342-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:56:30.343Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:30.343-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:56:30.344Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-9","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:30.343-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:56:31.721Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:56:31.723Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:56:31.827Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:56:32.332Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:56:32.334Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@420068a]"}
{"@timestamp":"2020-06-21T21:56:34.366Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:56:34.803Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:56:34.803Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:56:34.839Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 35ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:56:34.904Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:56:34.904Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:56:34.919Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:56:34.920Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:56:35.010Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:56:35.181Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:56:35.443Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:56:35.444Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:56:35.445Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:56:35.461Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:56:35.462Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1094 ms"}
{"@timestamp":"2020-06-21T21:56:37.307Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@320ca97c] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:56:41.685Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:56:41.783Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.783-0300 I CONTROL  [initandlisten] MongoDB starting : pid=6184 port=56206 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-5fb23e54-8d16-4951-ab61-9efba05b3917 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:56:41.783Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:56:41.784Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:56:41.785Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.784-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 56206 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-5fb23e54-8d16-4951-ab61-9efba05b3917\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:56:41.785Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:41.785-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:56:43.875Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:43.875-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:56:43.876Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:43.876-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:56:43.876Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:43.876-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:56:43.877Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:43.876-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:56:43.877Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:43.876-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:56:46.006Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:46.006-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:56:46.007Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:46.006-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-5fb23e54-8d16-4951-ab61-9efba05b3917/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:56:47.085Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.085-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:56:47.086Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.085-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:56:47.174Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.174-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:56:47.175Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.175-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:56:47.176Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.176-0300 I NETWORK  [thread1] waiting for connections on port 56206"}
{"@timestamp":"2020-06-21T21:56:47.176Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@2d6abfc7"}
{"@timestamp":"2020-06-21T21:56:47.186Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:56206], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:56:47.186Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:56206 to client view of cluster"}
{"@timestamp":"2020-06-21T21:56:47.191Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.191-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56209 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:47.192Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:47.192-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:56209 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:56:47.194Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd79f8bb61526acd92794', description='null'}-localhost:56206","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:56206"}
{"@timestamp":"2020-06-21T21:56:47.195Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd79f8bb61526acd92794', description='null'}-localhost:56206","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:56206, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=608300}"}
{"@timestamp":"2020-06-21T21:56:47.196Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd79f8bb61526acd92794', description='null'}-localhost:56206","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:56:48.198Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:56:48.207Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.208-0300 I -        [conn1] end connection 127.0.0.1:56209 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:48.208Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.208-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56211 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:56:48.209Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.210-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:56:48.209Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.210-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:56:48.209Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.210-0300 I NETWORK  [conn2] closing listening socket: 464"}
{"@timestamp":"2020-06-21T21:56:48.210Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.210-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:56:48.210Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.210-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:56:48.213Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:48.214-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:56:49.374Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:49.374-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:56:49.374Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:49.374-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:56:49.374Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-15","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:49.374-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:56:50.583Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:56:50.584Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:56:50.595Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:56:50.808Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:56:50.809Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@23471f48]"}
{"@timestamp":"2020-06-21T21:56:52.512Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:56:52.934Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:56:52.935Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:56:53.013Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 78ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:56:53.106Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:56:53.106Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:56:53.124Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:56:53.124Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:56:53.361Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:56:53.515Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:56:53.672Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:56:53.673Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:56:53.673Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:56:53.688Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:56:53.688Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1173 ms"}
{"@timestamp":"2020-06-21T21:56:54.923Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2810d9] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:56:56.756Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:56:56.848Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.846-0300 I CONTROL  [initandlisten] MongoDB starting : pid=10688 port=56230 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-511aa0c3-77c9-4f5f-bd96-753b8d864df9 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:56:56.848Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:56:56.848Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:56:56.848Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:56:56.849Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.848-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 56230 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-511aa0c3-77c9-4f5f-bd96-753b8d864df9\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:56:56.851Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:56.851-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:56:59.323Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:59.324-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:56:59.324Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:59.324-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:56:59.325Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:59.324-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:56:59.325Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:59.324-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:56:59.326Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:56:59.324-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:57:01.332Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:01.332-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:57:01.332Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:01.332-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-511aa0c3-77c9-4f5f-bd96-753b8d864df9/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:57:02.489Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.489-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:57:02.489Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.489-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:57:02.584Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.585-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:57:02.585Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.585-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:57:02.586Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.586-0300 I NETWORK  [thread1] waiting for connections on port 56230"}
{"@timestamp":"2020-06-21T21:57:02.586Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@718212ef"}
{"@timestamp":"2020-06-21T21:57:02.595Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:56230], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:57:02.596Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:56230 to client view of cluster"}
{"@timestamp":"2020-06-21T21:57:02.598Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.599-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56238 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:57:02.600Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:02.600-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:56238 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:57:02.602Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7ae8bb61526acd92795', description='null'}-localhost:56230","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:3, serverValue:1}] to localhost:56230"}
{"@timestamp":"2020-06-21T21:57:02.603Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7ae8bb61526acd92795', description='null'}-localhost:56230","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:56230, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=532900}"}
{"@timestamp":"2020-06-21T21:57:02.603Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7ae8bb61526acd92795', description='null'}-localhost:56230","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:57:03.282Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:57:03.292Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.293-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56239 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:57:03.296Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.295-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:57:03.297Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.296-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:57:03.297Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.296-0300 I NETWORK  [conn2] closing listening socket: 168"}
{"@timestamp":"2020-06-21T21:57:03.297Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.296-0300 I -        [conn1] end connection 127.0.0.1:56238 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:57:03.298Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.298-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:57:03.300Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.300-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:57:03.303Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:03.303-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:57:04.447Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:04.448-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:57:04.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:04.448-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:57:04.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-21","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:04.449-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:57:05.586Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:57:05.590Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:57:05.622Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:57:06.439Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:57:06.448Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:57:06.449Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@4a03c4bc]"}
{"@timestamp":"2020-06-21T21:57:08.029Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.controller.MancalaJogoControllerTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:57:08.414Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:08.414Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:08.447Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 32ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:57:08.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:08.509Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:08.525Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:57:08.527Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:57:08.625Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=42f21906-46a2-3bb0-85a3-a6f397c5855a"}
{"@timestamp":"2020-06-21T21:57:08.805Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:57:09.014Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 0 (http)"}
{"@timestamp":"2020-06-21T21:57:09.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2020-06-21T21:57:09.026Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/9.0.36]"}
{"@timestamp":"2020-06-21T21:57:09.043Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-06-21T21:57:09.043Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1011 ms"}
{"@timestamp":"2020-06-21T21:57:10.447Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration","message":"Check result of the [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4662fa99] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-06-21T21:57:12.145Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.236-0300 I CONTROL  [initandlisten] MongoDB starting : pid=4640 port=56255 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ddc52342-67b8-4aef-b551-9b8ed2b59143 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:57:12.238Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:57:12.239Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:57:12.239Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:57:12.239Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:57:12.239Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.238-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 56255 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-ddc52342-67b8-4aef-b551-9b8ed2b59143\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:57:12.239Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:12.239-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:57:14.613Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:14.614-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:57:14.614Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:14.614-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:57:14.614Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:14.614-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:57:14.614Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:14.614-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:57:14.614Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:14.614-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:57:16.659Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:16.659-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:57:16.660Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:16.660-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-ddc52342-67b8-4aef-b551-9b8ed2b59143/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:57:17.587Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.586-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:57:17.587Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.586-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:57:17.653Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.653-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:57:17.655Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.655-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:57:17.656Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.656-0300 I NETWORK  [thread1] waiting for connections on port 56255"}
{"@timestamp":"2020-06-21T21:57:17.657Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@64e41da0"}
{"@timestamp":"2020-06-21T21:57:17.668Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:56255], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:57:17.668Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:56255 to client view of cluster"}
{"@timestamp":"2020-06-21T21:57:17.674Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.674-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56262 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:57:17.683Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:17.683-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:56262 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:57:17.685Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7bd8bb61526acd92796', description='null'}-localhost:56255","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:4, serverValue:1}] to localhost:56255"}
{"@timestamp":"2020-06-21T21:57:17.686Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7bd8bb61526acd92796', description='null'}-localhost:56255","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:56255, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=662600}"}
{"@timestamp":"2020-06-21T21:57:17.687Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7bd8bb61526acd92796', description='null'}-localhost:56255","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:57:18.430Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:57:18.446Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.446-0300 I -        [conn1] end connection 127.0.0.1:56262 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:57:18.447Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.447-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56264 #2 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:57:18.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.448-0300 I COMMAND  [conn2] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:57:18.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.448-0300 I NETWORK  [conn2] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:57:18.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.448-0300 I NETWORK  [conn2] closing listening socket: 540"}
{"@timestamp":"2020-06-21T21:57:18.448Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.449-0300 I NETWORK  [conn2] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:57:18.449Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.449-0300 I FTDC     [conn2] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:57:18.450Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:18.450-0300 I STORAGE  [conn2] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:57:19.486Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:19.486-0300 I STORAGE  [conn2] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:57:19.487Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:19.487-0300 I CONTROL  [conn2] now exiting"}
{"@timestamp":"2020-06-21T21:57:19.487Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:19.487-0300 I CONTROL  [conn2] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:57:19.488Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-27","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:19.487-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:57:20.636Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","message":"Timed out waiting for in-flight spans to send"}
{"@timestamp":"2020-06-21T21:57:20.637Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2020-06-21T21:57:20.646Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:57:20.860Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaSowingService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:95)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:79)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:54)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaSowingService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 46 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaSemeacaoService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 65 common frames omitted\r\n","@timestamp":"2020-06-21T21:57:20.861Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c214cc0] to prepare test instance [com.furb.mancalajogo.controller.MancalaJogoControllerTests@61c0a61]"}
{"@timestamp":"2020-06-21T21:57:22.691Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:57:22.801Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:22.802Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:22.834Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 32ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:57:22.925Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"Finalizer","logger":"io.lettuce.core.resource.DefaultClientResources","message":"io.lettuce.core.resource.DefaultClientResources was not shut down properly, shutdown() was not called before it's garbage-collected. Call shutdown() or shutdown(long,long,TimeUnit) "}
{"@timestamp":"2020-06-21T21:57:23.912Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"note: noprealloc may hurt performance in many applications"}
{"@timestamp":"2020-06-21T21:57:24.003Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.003-0300 I CONTROL  [initandlisten] MongoDB starting : pid=8100 port=56276 dbpath=C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-560d4968-ce7e-4a0d-a970-bb05fc89ea2e 64-bit host=DESKTOP-IC6Q5SE"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] targetMinOS: Windows Vista/Windows Server 2008"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] db version v3.5.5"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] git version: 98515c812b6fa893613f063dae568ff8319cbfbd"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] allocator: tcmalloc"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] modules: none"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] build environment:"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten]     distarch: x86_64"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten]     target_arch: x86_64"}
{"@timestamp":"2020-06-21T21:57:24.004Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.004-0300 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\", http: { enabled: false }, port: 56276 }, security: { authorization: \"disabled\" }, storage: { dbPath: \"C:\\Users\\User\\AppData\\Local\\Temp\\embedmongo-db-560d4968-ce7e-4a0d-a970-bb05fc89ea2e\", journal: { enabled: false }, mmapv1: { preallocDataFiles: false, smallFiles: true }, syncPeriodSecs: 0.0 } }"}
{"@timestamp":"2020-06-21T21:57:24.005Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:24.006-0300 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3534M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=0,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),,log=(enabled=false),"}
{"@timestamp":"2020-06-21T21:57:25.942Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:25.942-0300 W STORAGE  [initandlisten] Detected configuration for non-active storage engine mmapv1 when current storage engine is wiredTiger"}
{"@timestamp":"2020-06-21T21:57:25.942Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:25.942-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:57:25.942Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:25.942-0300 I CONTROL  [initandlisten] ** NOTE: This is a development version (3.5.5) of MongoDB."}
{"@timestamp":"2020-06-21T21:57:25.943Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:25.942-0300 I CONTROL  [initandlisten] **       Not recommended for production."}
{"@timestamp":"2020-06-21T21:57:25.943Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:25.942-0300 I CONTROL  [initandlisten] "}
{"@timestamp":"2020-06-21T21:57:27.535Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:27.536-0300 W FTDC     [initandlisten] Failed to initialize Performance Counters for FTDC: WindowsPdhError: PdhExpandCounterPathW failed with 'O objeto especificado nÃ£o foi encontrado no computador.' for counter '\\Memory\\Available Bytes'"}
{"@timestamp":"2020-06-21T21:57:27.536Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:27.536-0300 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/User/AppData/Local/Temp/embedmongo-db-560d4968-ce7e-4a0d-a970-bb05fc89ea2e/diagnostic.data'"}
{"@timestamp":"2020-06-21T21:57:28.578Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.579-0300 I INDEX    [initandlisten] build index on: admin.system.version properties: { v: 2, key: { version: 1 }, name: \"incompatible_with_version_32\", ns: \"admin.system.version\" }"}
{"@timestamp":"2020-06-21T21:57:28.579Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.579-0300 I INDEX    [initandlisten] \t building index using bulk method; build may temporarily use up to 500 megabytes of RAM"}
{"@timestamp":"2020-06-21T21:57:28.652Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.653-0300 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs"}
{"@timestamp":"2020-06-21T21:57:28.653Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.654-0300 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4"}
{"@timestamp":"2020-06-21T21:57:28.654Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.655-0300 I NETWORK  [thread1] waiting for connections on port 56276"}
{"@timestamp":"2020-06-21T21:57:28.654Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"de.flapdoodle.embed.mongo.MongodExecutable","message":"start de.flapdoodle.embed.mongo.config.MongodConfigBuilder$ImmutableMongodConfig@1f5faa89"}
{"@timestamp":"2020-06-21T21:57:28.657Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Cluster created with settings {hosts=[localhost:56276], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}"}
{"@timestamp":"2020-06-21T21:57:28.657Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.cluster","message":"Adding discovered server localhost:56276 to client view of cluster"}
{"@timestamp":"2020-06-21T21:57:28.678Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.678-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56287 #1 (1 connection now open)"}
{"@timestamp":"2020-06-21T21:57:28.680Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:28.680-0300 I NETWORK  [conn1] received client metadata from 127.0.0.1:56287 conn1: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:57:28.687Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7c88bb61526acd92797', description='null'}-localhost:56276","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:5, serverValue:1}] to localhost:56276"}
{"@timestamp":"2020-06-21T21:57:28.687Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7c88bb61526acd92797', description='null'}-localhost:56276","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:56276, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 5, 5]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=427600}"}
{"@timestamp":"2020-06-21T21:57:28.688Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"cluster-ClusterId{value='5eefd7c88bb61526acd92797', description='null'}-localhost:56276","logger":"org.mongodb.driver.cluster","message":"Discovered cluster type of STANDALONE"}
{"@timestamp":"2020-06-21T21:57:32.865Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.repository.MancalaRepositorioTests","message":"Started MancalaRepositorioTests in 11.991 seconds (JVM running for 133.582)"}
{"@timestamp":"2020-06-21T21:57:34.291Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:34.291-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56289 #2 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:57:34.296Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:34.297-0300 I NETWORK  [conn2] received client metadata from 127.0.0.1:56289 conn2: { driver: { name: \"mongo-java-driver|legacy\", version: \"3.11.2\" }, os: { type: \"Windows\", name: \"Windows 10\", architecture: \"amd64\", version: \"10.0\" }, platform: \"Java/Oracle Corporation/1.8.0_251-b08\" }"}
{"@timestamp":"2020-06-21T21:57:34.301Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.connection","message":"Opened connection [connectionId{localValue:6, serverValue:2}] to localhost:56276"}
{"@timestamp":"2020-06-21T21:57:35.192Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:35.192-0300 I WRITE    [conn2] remove test.games planSummary: EOF keysExamined:0 docsExamined:0 ndeleted:0 numYields:0 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } } } 137ms"}
{"@timestamp":"2020-06-21T21:57:35.260Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:35.260-0300 I COMMAND  [conn2] command test.$cmd command: delete { delete: \"games\", ordered: true, deletes: [ { q: {}, limit: 0 } ] } numYields:0 reslen:44 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { w: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_query 463ms"}
{"@timestamp":"2020-06-21T21:57:37.075Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:37.075-0300 I COMMAND  [conn2] command test.games command: insert { insert: \"games\", ordered: true, documents: [ { _id: ObjectId('5eefd7cf8bb61526acd92798'), buracos: [ { _id: 1, pedras: 6 }, { _id: 2, pedras: 6 }, { _id: 3, pedras: 6 }, { _id: 4, pedras: 6 }, { _id: 5, pedras: 6 }, { _id: 6, pedras: 6 }, { _id: 7, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" }, { _id: 8, pedras: 6 }, { _id: 9, pedras: 6 }, { _id: 10, pedras: 6 }, { _id: 11, pedras: 6 }, { _id: 12, pedras: 6 }, { _id: 13, pedras: 6 }, { _id: 14, pedras: 0, _class: \"com.furb.mancalajogo.model.MancalaCasa\" } ], indiceAtual: 0, _class: \"com.furb.mancalajogo.model.MancalaJogo\" } ] } ninserted:1 keysInserted:1 numYields:0 reslen:44 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_query 1261ms"}
{"@timestamp":"2020-06-21T21:57:38.778Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:38.778-0300 I COMMAND  [conn2] command test.games command: find { find: \"games\" } planSummary: COLLSCAN keysExamined:0 docsExamined:1 cursorExhausted:1 numYields:1 nreturned:1 reslen:717 locks:{ Global: { acquireCount: { r: 4 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 2 } } } protocol:op_query 797ms"}
{"@timestamp":"2020-06-21T21:57:39.182Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.mongodb.driver.connection","message":"Closed connection [connectionId{localValue:6, serverValue:2}] to localhost:56276 because the pool has been closed."}
{"@timestamp":"2020-06-21T21:57:39.184Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.185-0300 I NETWORK  [thread1] connection accepted from 127.0.0.1:56290 #3 (3 connections now open)"}
{"@timestamp":"2020-06-21T21:57:39.249Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.249-0300 I COMMAND  [conn3] terminating, shutdown command received"}
{"@timestamp":"2020-06-21T21:57:39.261Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.262-0300 I NETWORK  [conn3] shutdown: going to close listening sockets..."}
{"@timestamp":"2020-06-21T21:57:39.261Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.262-0300 I NETWORK  [conn3] closing listening socket: 524"}
{"@timestamp":"2020-06-21T21:57:39.284Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.284-0300 I NETWORK  [conn3] shutdown: going to flush diaglog..."}
{"@timestamp":"2020-06-21T21:57:39.304Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.304-0300 I FTDC     [conn3] Shutting down full-time diagnostic data capture"}
{"@timestamp":"2020-06-21T21:57:39.306Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.306-0300 I STORAGE  [conn3] WiredTigerKVEngine shutting down"}
{"@timestamp":"2020-06-21T21:57:39.609Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.609-0300 I -        [conn1] end connection 127.0.0.1:56287 (3 connections now open)"}
{"@timestamp":"2020-06-21T21:57:39.611Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:39.611-0300 I -        [conn2] end connection 127.0.0.1:56289 (2 connections now open)"}
{"@timestamp":"2020-06-21T21:57:40.597Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:40.597-0300 I STORAGE  [conn3] shutdown: removing fs lock..."}
{"@timestamp":"2020-06-21T21:57:40.642Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:40.642-0300 I CONTROL  [conn3] now exiting"}
{"@timestamp":"2020-06-21T21:57:40.642Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:40.642-0300 I CONTROL  [conn3] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:57:40.643Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"Thread-32","logger":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo","message":"2020-06-21T18:57:40.642-0300 I CONTROL  [initandlisten] shutting down with code:0"}
{"@timestamp":"2020-06-21T21:57:44.196Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:57:46.717Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:46.717Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:46.746Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 28ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:57:46.825Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:46.826Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:46.843Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:57:46.843Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:57:46.934Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:57:54.112Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:57:55.224Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:57:55.247Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:57:55.492Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:57:55.493Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@14270715]"}
{"@timestamp":"2020-06-21T21:57:57.115Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:57:57.409Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:57.409Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:57.439Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 29ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:57:57.485Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:57:57.485Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:57:57.500Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:57:57.500Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:57:57.572Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:57:57.692Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:57:59.807Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:57:59.830Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:58:00.068Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:58:00.071Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@11cb348c]"}
{"@timestamp":"2020-06-21T21:58:01.619Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"com.furb.mancalajogo.service.MancalaServiceTests","message":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-06-21T21:58:01.936Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:58:01.936Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:58:01.971Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 35ms. Found 1 MongoDB repository interfaces."}
{"@timestamp":"2020-06-21T21:58:02.036Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"@timestamp":"2020-06-21T21:58:02.036Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2020-06-21T21:58:02.062Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.furb.mancalajogo.repository.MancalaRepositorioJogo. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository."}
{"@timestamp":"2020-06-21T21:58:02.063Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2020-06-21T21:58:02.170Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=d8aa5b35-b5a5-3a86-9323-89500de33bac"}
{"@timestamp":"2020-06-21T21:58:02.312Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.sleuth.redis-org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties' of type [org.springframework.cloud.sleuth.instrument.redis.TraceRedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-06-21T21:58:02.999Z","severity":"WARN","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}"}
{"@timestamp":"2020-06-21T21:58:03.020Z","severity":"INFO","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled."}
{"@timestamp":"2020-06-21T21:58:03.240Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField mancalaService in com.furb.mancalajogo.controller.MancalaController required a bean of type 'com.furb.mancalajogo.service.MancalaService' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.furb.mancalajogo.service.MancalaService' in your configuration.\r\n"}
{"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mancalaController': Unsatisfied dependency expressed through field 'mancalaService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 45 common frames omitted\r\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.furb.mancalajogo.service.MancalaService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\r\n\t... 63 common frames omitted\r\n","@timestamp":"2020-06-21T21:58:03.241Z","severity":"ERROR","service":"mancala-api","pid":7832,"thread":"main","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79dc5318] to prepare test instance [com.furb.mancalajogo.service.MancalaServiceTests@571f925f]"}
